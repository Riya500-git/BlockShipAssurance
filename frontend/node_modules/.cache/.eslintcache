[{"E:\\bwc3\\src\\index.js":"1","E:\\bwc3\\src\\App.js":"2","E:\\bwc3\\src\\reportWebVitals.js":"3","E:\\bwc3\\src\\Scan.js":"4","E:\\bwc3\\src\\Owner.js":"5","E:\\bwc3\\src\\Html5QrcodePlugin.jsx":"6","E:\\bwc3\\src\\List.js":"7","E:\\bwc3\\src\\Create.js":"8","E:\\bwc3\\src\\Home.js":"9","E:\\bwc3\\src\\components\\Navbar.js":"10"},{"size":535,"mtime":1689713318114,"results":"11","hashOfConfig":"12"},{"size":805,"mtime":1689937995247,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1689713330114,"results":"14","hashOfConfig":"12"},{"size":3128,"mtime":1689936090072,"results":"15","hashOfConfig":"12"},{"size":3525,"mtime":1689936442029,"results":"16","hashOfConfig":"12"},{"size":1967,"mtime":1689794738259,"results":"17","hashOfConfig":"12"},{"size":1819,"mtime":1689936822059,"results":"18","hashOfConfig":"12"},{"size":5358,"mtime":1689940135260,"results":"19","hashOfConfig":"12"},{"size":2239,"mtime":1689939363028,"results":"20","hashOfConfig":"12"},{"size":3309,"mtime":1689939568554,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"w01zwr",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\bwc3\\src\\index.js",[],[],[],"E:\\bwc3\\src\\App.js",[],[],"E:\\bwc3\\src\\reportWebVitals.js",[],[],"E:\\bwc3\\src\\Scan.js",["56","57","58"],[],"import React, { useRef, useState } from 'react';\r\nimport { Box, Button, Input, ChakraProvider } from '@chakra-ui/react';\r\n// import Html5QrcodePlugin from './Html5QrcodePlugin.jsx';\r\n\r\nconst Scan = ({ connectedAddress, myType, markParcelDelivered, updateLocation }) => {\r\n  const [parcelId, setParcelId] = useState('');\r\n  const [otpValue, setOtpValue] = useState('');\r\n\r\n  const updateLoc = () => {\r\n    if (navigator.geolocation) {\r\n      let location_ = '';\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        location_ = \"\" + position.coords.latitude + ',' + '' + position.coords.longitude;\r\n        console.log(\"location_ =\", location_);\r\n      });\r\n      updateLocation([parcelId], location_);\r\n    } else {\r\n      console.error('Geolocation is not supported by this browser');\r\n    }\r\n  }\r\n\r\n  const markDelivered = () => {\r\n    markParcelDelivered(parcelId, otpValue);\r\n  }\r\n\r\n  const onNewScanResult = (decodedText, decodedResult) => {\r\n    console.log(\"App [result]\", decodedResult);\r\n    const info = decodedText.split(' ');\r\n    // const element = document.getElementById('parcelId');\r\n    // element.textContent = info[2];\r\n    setParcelId(info[2]);\r\n    // setDecodedResults(prev => [...prev, decodedResult]);\r\n  };\r\n\r\n  return (\r\n    <ChakraProvider>\r\n    <Box className=\"parcel-containers\" backgroundColor=\"rgba(25, 255, 255, 0.5)\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" height=\"100vh\" marginTop=\"0\">\r\n      {/* <Html5QrcodePlugin fps={10} qrbox={250} disableFlip={false} qrCodeSuccessCallback={onNewScanResult} /> */}\r\n\r\n      <Box className=\"parcel-id-box\" marginTop=\"20px\" padding=\"0px\" backgroundColor=\"#ffffff\" border=\"0px solid #dddddd\" borderRadius=\"8px\" marginBottom=\"50px\" width=\"400px\" >\r\n        <Input\r\n          type=\"text\"\r\n          id=\"parcelId\"\r\n          value={parcelId}\r\n          className=\"name-input\"\r\n          placeholder=\"ParcelId\"\r\n          onChange={(event) => setParcelId(event.target.value)}\r\n        />\r\n      </Box>\r\n\r\n      <Box className=\"action-buttons\">\r\n        <Button onClick={updateLoc} marginRight=\"10px\" padding=\"8px 16px\" ml={10} backgroundColor=\"#2472ff\" color=\"#ffffff\" borderRadius=\"4px\" fontSize=\"16px\" cursor=\"pointer\" width=\"150px\" height=\"40px\" background=\"linear-gradient(90.69deg, #2472ff -22.6%, #7e51db 86.31%)\">\r\n          Update Location\r\n        </Button>\r\n        <Button onClick={markDelivered} padding=\"8px 16px\" ml={5} backgroundColor=\"#2472ff\" color=\"#ffffff\" borderRadius=\"4px\" fontSize=\"16px\" cursor=\"pointer\" width=\"150px\" height=\"40px\" background=\"linear-gradient(90.69deg, #2472ff -22.6%, #7e51db 86.31%)\">\r\n          Mark Delivered\r\n        </Button>\r\n        <Box className=\"parcel-id-box\" mt={10} backgroundColor=\"#ffffff\" borderRadius=\"8px\" width=\"400px\" >\r\n          <Input\r\n            type=\"text\"\r\n            id=\"otp_value\"\r\n            className=\"name-input\"\r\n            placeholder=\"OTP\"\r\n            onChange={(event) => setOtpValue(event.target.value)}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default Scan;\r\n","E:\\bwc3\\src\\Owner.js",[],[],"E:\\bwc3\\src\\Html5QrcodePlugin.jsx",[],[],[],"E:\\bwc3\\src\\List.js",["59","60"],[],"import React from 'react';\r\nimport { Box, ChakraProvider } from '@chakra-ui/react';\r\n\r\nconst List = ({ connectedAddress, myType, myParcels }) => {\r\n  const getStatusString = (status_) => {\r\n    if (status_ === \"0\") return \"Dispatched\";\r\n    else if (status_ === \"1\") return \"In Transit\";\r\n    else if (status_ === \"2\") return \"Delivered\";\r\n    return \"Failed\";\r\n  };\r\n  const parcels = myParcels;\r\n\r\n  return (\r\n    <ChakraProvider>\r\n    <Box\r\n      display=\"grid\"\r\n      gridTemplateColumns=\"repeat(auto-fit, minmax(350px, 1fr))\"\r\n      gap=\"50px\"\r\n      padding=\"150px\"\r\n      backdropFilter=\"blur(10px)\"\r\n      backgroundColor=\"rgba(25, 255, 255, 0.5)\"\r\n      height=\"100vh\"\r\n      marginTop=\"0\"\r\n    >\r\n      {/* {parcels.map((parcel) => ( */}\r\n        <Box\r\n          // key={parcel.id.toString()}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          padding=\"20px\"\r\n          backgroundColor=\"#ffffff\"\r\n          border=\"0px solid #dddddd\"\r\n          borderRadius=\"8px\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <h2 fontSize=\"20px\" marginBottom=\"10px\">\r\n            ID: {/* {parcel.id.toString()} */}\r\n          </h2>\r\n           <p margin=\"8px 0\">Name: {/* {parcel.itemName}*/}</p> \r\n          <p margin=\"8px 0\">Description: {/*{parcel.itemDesc}*/}</p>\r\n          <p margin=\"8px 0\">Current Location:{/* {parcel.currentLocation}*/}</p>\r\n          <p margin=\"8px 0\">Status:{/* {getStatusString(parcel.status.toString())}*/}</p>\r\n          <p margin=\"8px 0\">\r\n            Expected Delivery Date:{/* {new Date(parcel.expectedDelivery.toString() * 1000).toLocaleString()}*/}\r\n          </p>\r\n          <p margin=\"8px 0\">OTP: {/*{parcel.otp.toString()}*/}</p>\r\n        </Box>\r\n      {/* ) */}\r\n      {/* ) */}\r\n      {/* } */}\r\n    </Box>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","E:\\bwc3\\src\\Create.js",[],[],"E:\\bwc3\\src\\Home.js",["61","62","63"],[],"E:\\bwc3\\src\\components\\Navbar.js",[],[],{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":13,"column":57,"nodeType":"70","messageId":"71","endLine":13,"endColumn":58},{"ruleId":"64","severity":1,"message":"72","line":26,"column":9,"nodeType":"66","messageId":"67","endLine":26,"endColumn":24},{"ruleId":"64","severity":1,"message":"73","line":5,"column":9,"nodeType":"66","messageId":"67","endLine":5,"endColumn":24},{"ruleId":"64","severity":1,"message":"74","line":11,"column":9,"nodeType":"66","messageId":"67","endLine":11,"endColumn":16},{"ruleId":"64","severity":1,"message":"75","line":2,"column":38,"nodeType":"66","messageId":"67","endLine":2,"endColumn":43},{"ruleId":"64","severity":1,"message":"76","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":16},{"ruleId":"64","severity":1,"message":"77","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":14},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'onNewScanResult' is assigned a value but never used.","'getStatusString' is assigned a value but never used.","'parcels' is assigned a value but never used.","'Image' is defined but never used.","'motion' is defined but never used.","'Navbar' is defined but never used."]