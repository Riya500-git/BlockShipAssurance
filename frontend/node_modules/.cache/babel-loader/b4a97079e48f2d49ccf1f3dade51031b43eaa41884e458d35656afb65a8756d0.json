{"ast":null,"code":"// // Html5QrcodePlugin.jsx\n// // CREDITS :- https://github.com/scanapp-org/html5-qrcode-react/tree/main\n// import { Html5QrcodeScanner } from \"html5-qrcode\";\n// import React from 'react';\n\n// const qrcodeRegionId = \"html5qr-code-full-region\";\n\n// class Html5QrcodePlugin extends React.Component {\n//     render() {\n//         return <div id={qrcodeRegionId} />;\n//     }\n\n//     componentWillUnmount() {\n//         // TODO(mebjas): See if there is a better way to handle\n//         //  promise in `componentWillUnmount`.\n//         this.html5QrcodeScanner.clear().catch(error => {\n//             console.error(\"Failed to clear html5QrcodeScanner. \", error);\n//         });\n//     }\n\n//     componentDidMount() {\n//         // Creates the configuration object for Html5QrcodeScanner.\n//         function createConfig(props) {\n//             var config = {};\n//             if (props.fps) {\n//             config.fps = props.fps;\n//             }\n//             if (props.qrbox) {\n//             config.qrbox = props.qrbox;\n//             }\n//             if (props.aspectRatio) {\n//             config.aspectRatio = props.aspectRatio;\n//             }\n//             if (props.disableFlip !== undefined) {\n//             config.disableFlip = props.disableFlip;\n//             }\n//             return config;\n//         }\n\n//         var config = createConfig(this.props);\n//         var verbose = this.props.verbose === true;\n\n//         // Suceess callback is required.\n//         if (!(this.props.qrCodeSuccessCallback )) {\n//             throw \"qrCodeSuccessCallback is required callback.\";\n//         }\n\n//         this.html5QrcodeScanner = new Html5QrcodeScanner(\n//             qrcodeRegionId, config, verbose);\n//         this.html5QrcodeScanner.render(\n//             this.props.qrCodeSuccessCallback,\n//             this.props.qrCodeErrorCallback);\n//     }\n// };\n\n// export default Html5QrcodePlugin;","map":{"version":3,"names":[],"sources":["E:/bwc3/src/Html5QrcodePlugin.jsx"],"sourcesContent":["// // Html5QrcodePlugin.jsx\r\n// // CREDITS :- https://github.com/scanapp-org/html5-qrcode-react/tree/main\r\n// import { Html5QrcodeScanner } from \"html5-qrcode\";\r\n// import React from 'react';\r\n\r\n// const qrcodeRegionId = \"html5qr-code-full-region\";\r\n\r\n// class Html5QrcodePlugin extends React.Component {\r\n//     render() {\r\n//         return <div id={qrcodeRegionId} />;\r\n//     }\r\n\r\n//     componentWillUnmount() {\r\n//         // TODO(mebjas): See if there is a better way to handle\r\n//         //  promise in `componentWillUnmount`.\r\n//         this.html5QrcodeScanner.clear().catch(error => {\r\n//             console.error(\"Failed to clear html5QrcodeScanner. \", error);\r\n//         });\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         // Creates the configuration object for Html5QrcodeScanner.\r\n//         function createConfig(props) {\r\n//             var config = {};\r\n//             if (props.fps) {\r\n//             config.fps = props.fps;\r\n//             }\r\n//             if (props.qrbox) {\r\n//             config.qrbox = props.qrbox;\r\n//             }\r\n//             if (props.aspectRatio) {\r\n//             config.aspectRatio = props.aspectRatio;\r\n//             }\r\n//             if (props.disableFlip !== undefined) {\r\n//             config.disableFlip = props.disableFlip;\r\n//             }\r\n//             return config;\r\n//         }\r\n\r\n//         var config = createConfig(this.props);\r\n//         var verbose = this.props.verbose === true;\r\n\r\n//         // Suceess callback is required.\r\n//         if (!(this.props.qrCodeSuccessCallback )) {\r\n//             throw \"qrCodeSuccessCallback is required callback.\";\r\n//         }\r\n\r\n//         this.html5QrcodeScanner = new Html5QrcodeScanner(\r\n//             qrcodeRegionId, config, verbose);\r\n//         this.html5QrcodeScanner.render(\r\n//             this.props.qrCodeSuccessCallback,\r\n//             this.props.qrCodeErrorCallback);\r\n//     }\r\n// };\r\n\r\n// export default Html5QrcodePlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}