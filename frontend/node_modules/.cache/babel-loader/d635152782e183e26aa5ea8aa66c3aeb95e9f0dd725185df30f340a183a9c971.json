{"ast":null,"code":"var _jsxFileName = \"E:\\\\bwc3\\\\src\\\\List.js\";\nimport React from 'react';\nimport { Box, ChakraProvider } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  connectedAddress,\n  myType,\n  myParcels\n}) => {\n  const getStatusString = status_ => {\n    if (status_ === \"0\") return \"Dispatched\";else if (status_ === \"1\") return \"In Transit\";else if (status_ === \"2\") return \"Delivered\";\n    return \"Failed\";\n  };\n  const parcels = myParcels;\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(350px, 1fr))\",\n      gap: \"50px\",\n      padding: \"150px\",\n      backdropFilter: \"blur(10px)\",\n      backgroundColor: \"rgba(25, 255, 255, 0.5)\",\n      height: \"100vh\",\n      marginTop: \"0\",\n      children: /*#__PURE__*/_jsxDEV(Box\n      // key={parcel.id.toString()}\n      , {\n        width: \"100%\",\n        height: \"auto\",\n        padding: \"20px\",\n        backgroundColor: \"#ffffff\",\n        border: \"0px solid #dddddd\",\n        borderRadius: \"8px\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          fontSize: \"20px\",\n          marginBottom: \"10px\",\n          children: \"ID: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          margin: \"8px 0\",\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          margin: \"8px 0\",\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          margin: \"8px 0\",\n          children: \"Current Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          margin: \"8px 0\",\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          margin: \"8px 0\",\n          children: \"Expected Delivery Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          margin: \"8px 0\",\n          children: \"OTP: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","Box","ChakraProvider","jsxDEV","_jsxDEV","List","connectedAddress","myType","myParcels","getStatusString","status_","parcels","children","display","gridTemplateColumns","gap","padding","backdropFilter","backgroundColor","height","marginTop","width","border","borderRadius","flexDirection","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","margin","_c","$RefreshReg$"],"sources":["E:/bwc3/src/List.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, ChakraProvider } from '@chakra-ui/react';\r\n\r\nconst List = ({ connectedAddress, myType, myParcels }) => {\r\n  const getStatusString = (status_) => {\r\n    if (status_ === \"0\") return \"Dispatched\";\r\n    else if (status_ === \"1\") return \"In Transit\";\r\n    else if (status_ === \"2\") return \"Delivered\";\r\n    return \"Failed\";\r\n  };\r\n  const parcels = myParcels;\r\n\r\n  return (\r\n    <ChakraProvider>\r\n    <Box\r\n      display=\"grid\"\r\n      gridTemplateColumns=\"repeat(auto-fit, minmax(350px, 1fr))\"\r\n      gap=\"50px\"\r\n      padding=\"150px\"\r\n      backdropFilter=\"blur(10px)\"\r\n      backgroundColor=\"rgba(25, 255, 255, 0.5)\"\r\n      height=\"100vh\"\r\n      marginTop=\"0\"\r\n    >\r\n      {/* {parcels.map((parcel) => ( */}\r\n        <Box\r\n          // key={parcel.id.toString()}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          padding=\"20px\"\r\n          backgroundColor=\"#ffffff\"\r\n          border=\"0px solid #dddddd\"\r\n          borderRadius=\"8px\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <h2 fontSize=\"20px\" marginBottom=\"10px\">\r\n            ID: {/* {parcel.id.toString()} */}\r\n          </h2>\r\n           <p margin=\"8px 0\">Name: {/* {parcel.itemName}*/}</p> \r\n          <p margin=\"8px 0\">Description: {/*{parcel.itemDesc}*/}</p>\r\n          <p margin=\"8px 0\">Current Location:{/* {parcel.currentLocation}*/}</p>\r\n          <p margin=\"8px 0\">Status:{/* {getStatusString(parcel.status.toString())}*/}</p>\r\n          <p margin=\"8px 0\">\r\n            Expected Delivery Date:{/* {new Date(parcel.expectedDelivery.toString() * 1000).toLocaleString()}*/}\r\n          </p>\r\n          <p margin=\"8px 0\">OTP: {/*{parcel.otp.toString()}*/}</p>\r\n        </Box>\r\n      {/* ) */}\r\n      {/* ) */}\r\n      {/* } */}\r\n    </Box>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,IAAI,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EACxD,MAAMC,eAAe,GAAIC,OAAO,IAAK;IACnC,IAAIA,OAAO,KAAK,GAAG,EAAE,OAAO,YAAY,CAAC,KACpC,IAAIA,OAAO,KAAK,GAAG,EAAE,OAAO,YAAY,CAAC,KACzC,IAAIA,OAAO,KAAK,GAAG,EAAE,OAAO,WAAW;IAC5C,OAAO,QAAQ;EACjB,CAAC;EACD,MAAMC,OAAO,GAAGH,SAAS;EAEzB,oBACEJ,OAAA,CAACF,cAAc;IAAAU,QAAA,eACfR,OAAA,CAACH,GAAG;MACFY,OAAO,EAAC,MAAM;MACdC,mBAAmB,EAAC,sCAAsC;MAC1DC,GAAG,EAAC,MAAM;MACVC,OAAO,EAAC,OAAO;MACfC,cAAc,EAAC,YAAY;MAC3BC,eAAe,EAAC,yBAAyB;MACzCC,MAAM,EAAC,OAAO;MACdC,SAAS,EAAC,GAAG;MAAAR,QAAA,eAGXR,OAAA,CAACH;MACC;MAAA;QACAoB,KAAK,EAAC,MAAM;QACZF,MAAM,EAAC,MAAM;QACbH,OAAO,EAAC,MAAM;QACdE,eAAe,EAAC,SAAS;QACzBI,MAAM,EAAC,mBAAmB;QAC1BC,YAAY,EAAC,KAAK;QAClBC,aAAa,EAAC,QAAQ;QAAAZ,QAAA,gBAEtBR,OAAA;UAAIqB,QAAQ,EAAC,MAAM;UAACC,YAAY,EAAC,MAAM;UAAAd,QAAA,EAAC;QAClC;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACJ1B,OAAA;UAAG2B,MAAM,EAAC,OAAO;UAAAnB,QAAA,EAAC;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2B,CAAC,eACrD1B,OAAA;UAAG2B,MAAM,EAAC,OAAO;UAAAnB,QAAA,EAAC;QAAa;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0B,CAAC,eAC1D1B,OAAA;UAAG2B,MAAM,EAAC,OAAO;UAAAnB,QAAA,EAAC;QAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkC,CAAC,eACtE1B,OAAA;UAAG2B,MAAM,EAAC,OAAO;UAAAnB,QAAA,EAAC;QAAO;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqD,CAAC,eAC/E1B,OAAA;UAAG2B,MAAM,EAAC,OAAO;UAAAnB,QAAA,EAAC;QACO;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACJ1B,OAAA;UAAG2B,MAAM,EAAC,OAAO;UAAAnB,QAAA,EAAC;QAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAErB,CAAC;AAACE,EAAA,GAlDI3B,IAAI;AAoDV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}